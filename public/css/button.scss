// Buttons
// -------------------------

.btn-toolbar > .btn {
  float: none;
  margin-bottom: 5px;
}
.btn-group {
  .btn {
    height: inherit;
    padding-top: 0;
  }
}
.btn {
  font-weight: 400;
  border-radius: 0;
  text-transform: uppercase;
  border-radius: 35px;
  height: 35px;
  padding-top: 8px;

  &:focus {
    outline: 0 !important;
  }
  &.btn-status {
    padding: 0 5px;
    min-width: 75px;
  }
}
.btn-primary {
  border-color: transparent;
  border: 0;
  background: $light-pink;

  &:active, &:hover, &:focus {
    background: $mid-pink;
  }
}
.btn-default {
    border-color: transparent;
    border: 0;
    background-color: $dark-gray;

    &:active, &:hover, &:focus {
      border-color: transparent;
      background: $light-black;
      color: #fff;
    }
}
.btn-success {
  background: $mid-green;
  border: transparent;
  &:active, &:hover, &:focus {
    background: $dark-green;
    border: transparent;
  }
}
.btn-danger {
  background: $mid-orange;
  border: transparent;
  &:active, &:hover, &:focus {
    background: $dark-orange;
    border: transparent;
  }
}
.btn-rounded {
  border-radius: 50%;
  width: 35px;
  height: 35px;
  padding: 9px 0 0 0;
}
.btn-add {
  @extend .btn-rounded;
  transition: transform .2s;
  -webkit-box-shadow: 0px 12px 35px 0px $light-black;
  -moz-box-shadow: 0px 12px 35px 0px $light-black;
  box-shadow: 0px 12px 35px 0px $light-black;

  &:active, &:hover, &:focus {
    -ms-transform: scale(1.1); /* IE 9 */
    -webkit-transform: scale(1.1); /* Safari 3-8 */
    transform: scale(1.1);
    -webkit-box-shadow: 0px 12px 48px 2px $light-black;
    -moz-box-shadow: 0px 12px 48px 2px $light-black;
    box-shadow: 0px 12px 48px 2px $light-black;
  }
}
.btn-facebook {
  color: #fff;
  border-color: #335190;
  background: #3b5998 linear-gradient(to bottom, #4263a9, #3b5998);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.1), inset 0 -1px 4px rgba(59, 89, 152, 0.3);
  &:hover,
  &:focus {
    color: #fff;
  }
}
.btn-twitter {
  color: #fff;
  border-color: #009fdb;
  background: #00aced linear-gradient(to bottom, #05baff, #00aced);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.1), inset 0 -1px 4px rgba(0, 172, 237, 0.3);
  &:hover,
  &:focus {
    color: #fff;
  }
}
.btn-google {
  color: #fff;
  border-color: #d54331;
  background: #dd4b39 linear-gradient(to bottom, #e05d4d, #dd4b39);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.1), inset 0 -1px 4px rgba(221, 75, 57, 0.3);
  &:hover,
  &:focus {
    color: #fff;
  }
}
.btn-vk {
  color: #fff;
  border-color: #4f7192;
  background: #587ea3 linear-gradient(to bottom, #678aad, #587ea3);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.1), inset 0 -1px 4px rgba(79, 113, 146, 0.3);
  &:hover,
  &:focus {
    color: #fff;
  }
}
.btn-github {
  color: #fff;
  border-color: #444;
  background: #545454 linear-gradient(to bottom, #616161, #545454);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.1), inset 0 -1px 4px rgba(68, 68, 68, 0.3);
  &:hover,
  &:focus {
    color: #fff;
  }
}
.icon-delete {
  color: $dark-orange;
}
.icon-educational {
  i {
    @extend .pink-gradient;
    @extend .clip-settings;
    font-size: 5rem;
    padding: 10px 5px;
  }
}
.icon-defaults {
  i {
    @extend .blue-gradient;
    @extend .clip-settings;
    font-size: 8rem;
    padding: 10px 5px;
  }
}
.icon-warning {
  i {
    @extend .orange-gradient;
    @extend .clip-settings;
    font-size: 8rem;
    padding: 10px 5px;
  }
}
.btn-link {
  color: $light-black;
  height: inherit;
  padding-top: 0;
  padding-bottom: 0;

  &:active, &:hover, &:focus {
    color: $dark-black;
  }
}
// Switch Styles
$toggleheight: 2em;
$togglewidth: 3.2em;
$togglebg: rgb(255,255,255);
$togglebordersize: .12em;
$togglebordercolor: rgb(230,230,230);
$toggleinputwidth: $togglewidth * 1.5;
$switchbg: rgb(255,255,255);
$switchsize: $toggleheight * .95;
$switchbordersize: .1em;
$switchbordercolor: darken($switchbg, 15%);
$activecolor: $mid-green;
$activebordercolor: darken($activecolor, 5%);
$labeloffset: $toggleheight / 5.5;
$borderradius: 2em;

.toggle-bg {
  background: $togglebg;
  border-radius: $borderradius;
  border: $togglebordersize solid $togglebordercolor;
  display: block; /* ...So that we can set a height and width */
  float: left; /* ...So that it doesn't take up the full width of the page */
  height: $toggleheight; /* You can change this later if you want */
  position: relative; /* Required to allow the switch to move around */
  width: $togglewidth; /* This can be changed later as well */
  @include transition-duration(.2s);
  &:hover {
    border-color: darken($togglebordercolor,5%);
  }
  &.on {
    background: $activecolor;
    border-color: $activebordercolor;
  }
  input {
    margin: 0;
    padding: 0;
    width: $toggleinputwidth;
    height: 100%;
    @include opacity(0);
    position: absolute;
    left: 0;
    top: 0;
    cursor: pointer;
    z-index: 2; /* We want the input to be over the span.switch, which we'll give a z-index of 1 */
    /*IE*/
    zoom: 1;
    filter: alpha(opacity=0);
    /* initial toggle position */
    &:checked~.switch{
      left: 0;
    }
    /* final relative toggle position */
    &~:checked~.switch{
      left: ($togglewidth - $switchsize - $togglebordersize);
    }
    &:checked{
      z-index: 0;
    }
  }
}

// Main circular switch
.switch {
  background: $switchbg;
  border-radius: $borderradius;
  border: $switchbordersize solid $switchbordercolor;
  display: block;
  float: left;
  height: $switchsize;
  width: $switchsize;
  left: -.1em;
  position: relative;
  @include transition-duration(.2s);
  z-index: 1; /* Remember, it must be below the invisible inputs */
  bottom: .08em;
  &.on {
    box-shadow:
      -.2em .2em .5em rgba(0,0,0,.06),
      .4em .4em 1.5em rgba(0,0,0,.08);
  }
  &.off {
    box-shadow:
      .2em .2em .5em rgba(0,0,0,.06),
      -.4em .4em 1.5em rgba(0,0,0,.08);
  }
}

// Alternate
.toggle-alternate {
  clear: both;
  margin: 6px 0 10px 0;
  width: $togglewidth * 1.4;
  input {
    width: $toggleinputwidth * 1.3;
    &~:checked~.switch{
      left: ($togglewidth * 1.4 - $switchsize - $togglebordersize);
    }
  }
}
.toggle-alternate label {
  font-weight: 300;
  font-size: .9em;
  text-transform: uppercase;
  position: absolute;
  top: $labeloffset;
}
.toggle-bg label.on {
  left: .75em;
  color: white;
  text-shadow: 0 .1em 0 $activecolor;
}
.toggle-bg label.off {
  right: .55em;
  color: #aaa;
}
.btn-date {
  font-size: 1.2rem;
}
@media (min-width: 767px) {
  .btn-date {
    font-size: inherit;
  }
}
